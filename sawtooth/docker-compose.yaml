version: '3'

services:

  ehr-processor:
    build:
      context: .
      dockerfile: ehr_processor/Dockerfile
      args:
        - http_proxy
        - https_proxy
        - no_proxy
    image: ehr-tp
    container_name: ehr-processor
    volumes:
      - ./:/project/sawtooth_healthcare
    depends_on:
      - consent-processor
    command: |
      bash -c "
        sleep 1 &&
        echo '--- Building ehr-tp by docker-compose---\n' &&
        init-ehr-tp.sh &&
        ehr-tp -v -C tcp://ehr-validator:4004 &&
        tail -f /dev/null
               "

  consent-processor:
    build:
      context: .
      dockerfile: consent_processor/Dockerfile
      args:
        - http_proxy
        - https_proxy
        - no_proxy
    image: consent-tp
    container_name: consent-processor
    volumes:
      - ./:/project/sawtooth_healthcare
    command: |
      bash -c "
        sleep 1 &&
        echo '--- Building consent-tp by docker-compose---\n' &&
        init-consent-tp.sh &&
        consent-tp -v -C tcp://consent-validator:4004 &&
        tail -f /dev/null
               "

  trial-processor:
    build:
      context: .
      dockerfile: trial_processor/Dockerfile
      args:
        - http_proxy
        - https_proxy
        - no_proxy
    image: trial-tp
    container_name: trial-processor
    volumes:
      - ./:/project/sawtooth_healthcare
    depends_on:
      - ehr-processor
    command: |
      bash -c "
        sleep 1 &&
        echo '--- Building trial-tp by docker-compose---\n' &&
        init-trial-tp.sh &&
        trial-tp -v -C tcp://trial-validator:4004 &&
        tail -f /dev/null
               "

  hospital-rest-api:
    build:
      context: .
      dockerfile: rest_api/Dockerfile
      args:
        - http_proxy
        - https_proxy
        - no_proxy
    image: hospital-rest-api
    container_name: hospital-rest-api
    volumes:
      - .:/project/sawtooth_healthcare
    ports:
      - '8040:8000'
    depends_on:
      - ehr-validator
      - ehr-processor
    command: |
      bash -c "
        sleep 3 &&
        echo '--- Building hospital-rest-api by docker-compose---' &&
        init-ehr-rest-api.sh &&
        hospital-rest-api --host hospital-rest-api --ehr-validator tcp://ehr-validator:4004 --consent-validator tcp://consent-validator:4004 &&
        tail -f /dev/null
               "

  trial-rest-api:
    build:
      context: .
      dockerfile: trial_rest_api/Dockerfile
      args:
        - http_proxy
        - https_proxy
        - no_proxy
    image: trial-rest-api
    container_name: trial-rest-api
    volumes:
      - .:/project/sawtooth_healthcare
    ports:
      - '8045:8000'
    depends_on:
      - trial-validator
      - trial-processor
    command: |
      bash -c "
        sleep 3 &&
        echo '--- Building trial-rest-api by docker-compose---' &&
        init-trial-rest-api.sh &&
        trial-rest-api --host trial-rest-api --trial-validator tcp://trial-validator:4004 --consent-validator tcp://consent-validator:4004 &&
        tail -f /dev/null
               "

  ehr-settings-tp:
    image: hyperledger/sawtooth-settings-tp:1.2.4
    container_name: ehr-sawtooth-settings-tp
    depends_on:
      - ehr-validator
    command: settings-tp -vv --connect tcp://ehr-validator:4004

  ehr-validator:
    image: hyperledger/sawtooth-validator:1.2.4
    container_name: ehr-sawtooth-validator
    expose:
      - 4004
    ports:
      - '4040:4004'
    command: |
      bash -c "
        if [ ! -f /etc/sawtooth/keys/validator.priv ]; then
          sawadm keygen &&
          sawtooth keygen my_key &&
          sawset genesis -k /root/.sawtooth/keys/my_key.priv &&
          sawset proposal create \
            -k /root/.sawtooth/keys/my_key.priv \
            sawtooth.consensus.algorithm.name=Devmode \
            sawtooth.consensus.algorithm.version=0.1 \
            -o config.batch &&
          sawadm genesis config-genesis.batch config.batch
        fi;
        sawtooth-validator -vv \
          --endpoint tcp://ehr-validator:8800 \
          --bind component:tcp://eth0:4004 \
          --bind network:tcp://eth0:8800 \
          --bind consensus:tcp://eth0:5050
      "

  consent-settings-tp:
    image: hyperledger/sawtooth-settings-tp:1.2.4
    container_name: consent-sawtooth-settings-tp
    depends_on:
      - consent-validator
    command: settings-tp -vv --connect tcp://consent-validator:4004

  consent-validator:
    image: hyperledger/sawtooth-validator:1.2.4
    container_name: consent-sawtooth-validator
    expose:
      - 4004
    ports:
      - '4041:4004'
    command: |
      bash -c "
        if [ ! -f /etc/sawtooth/keys/validator.priv ]; then
          sawadm keygen &&
          sawtooth keygen my_key &&
          sawset genesis -k /root/.sawtooth/keys/my_key.priv &&
          sawset proposal create \
            -k /root/.sawtooth/keys/my_key.priv \
            sawtooth.consensus.algorithm.name=Devmode \
            sawtooth.consensus.algorithm.version=0.1 \
            -o config.batch &&
          sawadm genesis config-genesis.batch config.batch
        fi;
        sawtooth-validator -vv \
          --endpoint tcp://consent-validator:8800 \
          --bind component:tcp://eth0:4004 \
          --bind network:tcp://eth0:8800 \
          --bind consensus:tcp://eth0:5050
      "

  trial-settings-tp:
    image: hyperledger/sawtooth-settings-tp:1.2.4
    container_name: trial-sawtooth-settings-tp
    depends_on:
      - trial-validator
    command: settings-tp -vv --connect tcp://trial-validator:4004

  trial-validator:
    image: hyperledger/sawtooth-validator:1.2.4
    container_name: trial-sawtooth-validator
    expose:
      - 4004
    ports:
      - '4042:4004'
    command: |
      bash -c "
        if [ ! -f /etc/sawtooth/keys/validator.priv ]; then
          sawadm keygen &&
          sawtooth keygen my_key &&
          sawset genesis -k /root/.sawtooth/keys/my_key.priv &&
          sawset proposal create \
            -k /root/.sawtooth/keys/my_key.priv \
            sawtooth.consensus.algorithm.name=Devmode \
            sawtooth.consensus.algorithm.version=0.1 \
            -o config.batch &&
          sawadm genesis config-genesis.batch config.batch
        fi;
        sawtooth-validator -vv \
          --endpoint tcp://trial-validator:8800 \
          --bind component:tcp://eth0:4004 \
          --bind network:tcp://eth0:8800 \
          --bind consensus:tcp://eth0:5050
      "

  ehr-devmode-engine:
    image: hyperledger/sawtooth-devmode-engine-rust:1.2
    container_name: ehr-sawtooth-devmode-engine-rust-default
    depends_on:
      - ehr-validator
    entrypoint: devmode-engine-rust -v -C tcp://ehr-validator:5050

  consent-devmode-engine:
    image: hyperledger/sawtooth-devmode-engine-rust:1.2
    container_name: consent-sawtooth-devmode-engine-rust-default
    depends_on:
      - consent-validator
    entrypoint: devmode-engine-rust -v -C tcp://consent-validator:5050

  trial-devmode-engine:
    image: hyperledger/sawtooth-devmode-engine-rust:1.2
    container_name: trial-sawtooth-devmode-engine-rust-default
    depends_on:
      - trial-validator
    entrypoint: devmode-engine-rust -v -C tcp://trial-validator:5050

  hospital-web-app:
    build:
      context: .
      dockerfile: web_ehr/Dockerfile
    image: hospital-web-app
    user: "node"
    container_name: hospital-web-app
#    volumes:
#      - .:/project/sawtooth_healthcare
    volumes:
      - ./web_ehr:/home/node/app
      - /home/node/app/node_modules
    expose:
      - 8080
    ports:
      - '8041:8080'
    depends_on:
      - hospital-rest-api
    command: |
      sh -c "
        echo '--- Starting hospital-web-app by docker-compose---' &&
        npm start
      "
#        tail -f /dev/null

  investigator-web-app:
    build:
      context: .
      dockerfile: web_trial/Dockerfile
    image: investigator-web-app
    user: "node"
    container_name: investigator-web-app
#    volumes:
#      - .:/project/sawtooth_healthcare
    volumes:
      - ./web_trial:/home/node/app
      - /home/node/app/node_modules
    expose:
      - 8080
    ports:
      - '8044:8080'
    depends_on:
      - trial-rest-api
    command: |
      sh -c "
        echo '--- Starting investigator-web-app by docker-compose---' &&
        npm start
      "
